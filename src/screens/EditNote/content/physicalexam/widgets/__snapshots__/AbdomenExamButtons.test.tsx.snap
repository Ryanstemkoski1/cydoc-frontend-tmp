// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`AbdomenExamButtons > matches snapshot 1`] = `ReactWrapper {}`;

exports[`AbdomenExamButtons matches snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(AbdomenExamButtons)
    abdomenQuadrant="rightUpperQuadrant"
  >
    <AbdomenExamButtons
      abdomenQuadrant="rightUpperQuadrant"
      sections={
        Object {
          "guarding": false,
          "rebound": false,
          "tenderness": false,
        }
      }
      toggleSection={[Function]}
    >
      <div>
        <Button
          active={false}
          as="button"
          className="pe-ros-button spaced-buttons"
          content="tenderness"
          key="tenderness"
          onClick={[Function]}
          size="small"
        >
          <Ref
            innerRef={
              Object {
                "current": <button
                  class="ui small button pe-ros-button spaced-buttons"
                >
                  tenderness
                </button>,
              }
            }
          >
            <RefFindNode
              innerRef={
                Object {
                  "current": <button
                    class="ui small button pe-ros-button spaced-buttons"
                  >
                    tenderness
                  </button>,
                }
              }
            >
              <button
                className="ui small button pe-ros-button spaced-buttons"
                onClick={[Function]}
              >
                tenderness
              </button>
            </RefFindNode>
          </Ref>
        </Button>
        <Button
          active={false}
          as="button"
          className="pe-ros-button spaced-buttons"
          content="rebound"
          key="rebound"
          onClick={[Function]}
          size="small"
        >
          <Ref
            innerRef={
              Object {
                "current": <button
                  class="ui small button pe-ros-button spaced-buttons"
                >
                  rebound
                </button>,
              }
            }
          >
            <RefFindNode
              innerRef={
                Object {
                  "current": <button
                    class="ui small button pe-ros-button spaced-buttons"
                  >
                    rebound
                  </button>,
                }
              }
            >
              <button
                className="ui small button pe-ros-button spaced-buttons"
                onClick={[Function]}
              >
                rebound
              </button>
            </RefFindNode>
          </Ref>
        </Button>
        <Button
          active={false}
          as="button"
          className="pe-ros-button spaced-buttons"
          content="guarding"
          key="guarding"
          onClick={[Function]}
          size="small"
        >
          <Ref
            innerRef={
              Object {
                "current": <button
                  class="ui small button pe-ros-button spaced-buttons"
                >
                  guarding
                </button>,
              }
            }
          >
            <RefFindNode
              innerRef={
                Object {
                  "current": <button
                    class="ui small button pe-ros-button spaced-buttons"
                  >
                    guarding
                  </button>,
                }
              }
            >
              <button
                className="ui small button pe-ros-button spaced-buttons"
                onClick={[Function]}
              >
                guarding
              </button>
            </RefFindNode>
          </Ref>
        </Button>
      </div>
    </AbdomenExamButtons>
  </Connect(AbdomenExamButtons)>
</Provider>
`;
